plugins {
    id 'java'
    id "io.freefair.lombok" version "8.6"
    id 'io.qameta.allure' version '2.11.2'
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

group = 'com.demoqa'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def selenideVersion = "6.19.1",
    restAssuredVersion = "5.4.0",
    allureSelenideVersion = "2.25.0",
    allureRestAssuredVersion = "2.21.0",
    junitVersion = "5.10.1",
    ownerVersion = "1.0.12",
    assertjCoreVersion = "3.24.2",
    slf4jSimpleVersion = "2.0.7",
    jacksonCoreVersion = "2.13.1",
    jacksonDatabindVersion = "2.16.1",
    commonsIoVersion = "2.15.1"

allure {
    report {
        version.set(allureSelenideVersion)
    }

    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureRestAssuredVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "com.fasterxml.jackson.core:jackson-core:$jacksonCoreVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion",
            "org.assertj:assertj-core:$assertjCoreVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jSimpleVersion",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion",
            "io.qameta.allure:allure-rest-assured:$allureRestAssuredVersion",
            "org.aeonbits.owner:owner:$ownerVersion",
            "commons-io:commons-io:$commonsIoVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())
    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task api_test(type: Test) {
    useJUnitPlatform {
        includeTags("api_test")
    }

}